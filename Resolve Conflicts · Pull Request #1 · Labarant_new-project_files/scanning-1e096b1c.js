System.register(["./chunk-vendor.js","./chunk-frameworks.js"],function(H,P){"use strict";var m,h,w,v;return{setters:[function(u){m=u.a,h=u.o,w=u.k},function(u){v=u.F}],execute:function(){var u=Object.defineProperty,_=(t,e)=>u(t,"name",{value:e,configurable:!0});function A(t){const e=document.createElement("input");return e.setAttribute("type","hidden"),e.setAttribute("name",t.name),e.setAttribute("value",t.value),e}_(A,"copyInput");function I(t){let e=!1;const r=t.querySelectorAll(".js-scanning-fixed-alert-numbers"),o=r.length!==0?JSON.parse(r[0].getAttribute("data-numbers")||"[]"):[];for(const n of t.querySelectorAll(".js-scanning-bulk-action-items")){n.innerHTML="";const s=t.querySelectorAll(".js-scanning-alert-list [data-check-all-item]:checked");for(const i of s)e||(e=o.indexOf(parseInt(i.value))!==-1),n.appendChild(A(i))}for(const n of t.querySelectorAll(".js-scanning-reopen-button"))n.hidden=e;for(const n of t.querySelectorAll(".js-scanning-reopen-button-disabled"))n.hidden=!e}_(I,"copyCheckedAlertsToBulkActionForms"),m("change",".js-scanning-alert-check",function({currentTarget:t}){const e=t.closest(".js-scanning-alert-list"),r=e.querySelector(".js-scanning-alert-check:checked")!=null,o=e.querySelector(".js-scanning-filter-options"),n=e.querySelector(".js-scanning-alert-bulk-actions"),s=e.querySelector(".js-scanning-alert-links");o&&(o.hidden=r),n&&(n.hidden=!r),s&&(s.hidden=r),I(e)}),m("details-menu-selected",".js-scanning-code-path-menu",function(t){const e=t.detail.relatedTarget.getAttribute("data-target-code-path");for(const r of document.querySelectorAll(".js-scanning-code-path"))r.hidden=e!==r.getAttribute("data-code-path")},{capture:!0});var L=Object.defineProperty,d=(t,e)=>L(t,"name",{value:e,configurable:!0});h(".js-add-secret-format-button",{add(){window.postProcessingExpressionCount=0;const t=document.querySelector(".js-post-processing-expression-count");t&&t.textContent&&(window.postProcessingExpressionCount=parseInt(t.textContent))}}),m("click",".js-add-secret-format-button",t=>{const e=t.currentTarget;if(!!e&&window.postProcessingExpressionCount<f()){const r=document.querySelectorAll(".js-additional-secret-format");if(!r)return;for(const o of r)if(o.classList.contains("has-removed-contents")){o.classList.toggle("has-removed-contents",!1),window.postProcessingExpressionCount++,window.postProcessingExpressionCount===f()&&(e.hidden=!0);break}}}),m("click",".js-remove-secret-format-button",t=>{var e,r;const o=document.querySelector(".js-add-secret-format-button");if(!o)return;const n=t.currentTarget;if(!n)return;const s=n.closest(".js-additional-secret-format");if(!s)return;s.classList.toggle("has-removed-contents",!0);const i=s.getElementsByClassName("js-post-processing-input")[0];i.value="";const c=Array.from(s.getElementsByClassName("js-post-processing-input-rule")),l=s.getElementsByClassName("errored")[0];l&&l.classList.toggle("errored",!1);for(const S of c)(e=document.getElementById(`${S.id}_hidden`))==null||e.remove();(r=document.getElementById(`${i.id}_hidden`))==null||r.remove(),y(window.codeEditor.getValue()),window.postProcessingExpressionCount--,window.postProcessingExpressionCount<f()&&(o.hidden=!1)}),h(".js-test-code",{async add(){const t=document.querySelector(".js-test-code"),e=t.clientHeight,r=await P.import("./chunk-codemirror.js");if(window.codeEditor=r.default.fromTextArea(t,{lineNumbers:!1,lineWrapping:!0,mode:"text/x-yaml",inputStyle:"contenteditable",value:t.value,lineSeparator:`\r
`,theme:"github-light"}),e!==0){const o=document.querySelector(".CodeMirror");o&&(o.style.height=`${e}px`,o.style.border="1px solid #e1e4e8",o.style.borderRadius="6px")}window.codeEditor.save(),window.codeEditor.on("change",()=>{y(window.codeEditor.getValue())})}}),v(".js-custom-secret-scanning-pattern-form *",async function(){!window.codeEditor||y(window.codeEditor.getValue())});const M=d((t,e,r)=>{const o=document.createElement("input");o.type="hidden",o.name=e,o.id=`${e}_hidden`,o.value=r,t.appendChild(o),o.required=!0},"createHiddenInputField"),y=w(function(t){const e=document.querySelector(".js-custom-pattern-submit-button"),r=document.querySelector(".js-save-and-dry-run-button");if(!(e instanceof HTMLElement))return;const o=document.querySelector(".js-update-pattern-info"),n=document.querySelector(".js-test-pattern-matches");if(!!n)if(t.length===0)e.setAttribute("disabled","true"),r==null||r.setAttribute("disabled","true"),n.textContent="";else{window.codeEditor.save();const s=document.querySelector(".js-test-custom-secret-scanning-pattern");if(!(s instanceof HTMLFormElement))return;const i=document.querySelector(".js-custom-secret-scanning-pattern-form");if(!(i instanceof HTMLFormElement))return;for(const c of i.elements)if(c instanceof HTMLInputElement&&c.name&&(c.type==="text"||c.type==="radio"&&c.checked)){const l=document.getElementById(`${c.name}_hidden`);l!==null&&l.remove(),M(s,c.name,c.value)}k(s,N(i,e,r,o),F(n))}},300),F=d(t=>e=>{if(e.length===0)t.textContent=" - No matches";else if(e.length===1)t.textContent=" - 1 match";else{const r=[];for(const s of e)r.push(JSON.stringify(s));const n=[...new Set(r)];t.textContent=` - ${n.length} matches`}},"getTestLabelUpdater"),N=d((t,e,r,o)=>n=>{if(T(t),n==null?void 0:n.message){if(e.setAttribute("disabled","true"),r==null||r.setAttribute("disabled","true"),o)o.hidden=!0;else if((n==null?void 0:n.error_type)==="START_DELIMITER"||(n==null?void 0:n.error_type)==="END_DELIMITER"||(n==null?void 0:n.error_type)==="MUST_MATCH"||(n==null?void 0:n.error_type)==="MUST_NOT_MATCH"){const s=document.querySelector(".js-more-options.js-details-container");s&&(s.classList.add("open"),s.classList.add("Details--on"))}return j(t,n),!1}else return e.removeAttribute("disabled"),r==null||r.removeAttribute("disabled"),o&&(o.hidden=!1),!0},"getTestErrorHandler");function j(t,e){var r;if(e.error_type==="MUST_MATCH"||e.error_type==="MUST_NOT_MATCH"){let o=0;const n=t.getElementsByClassName("js-additional-secret-format");for(const s of n){if(o>(e.error_index||0))return;const c=[...s.getElementsByTagName("input")].filter(p=>p.checked),l=c&&((r=c[0])==null?void 0:r.value.toUpperCase()),S=l===e.error_type&&o===e.error_index,x=[...s.getElementsByTagName("input")].filter(p=>p.type==="text");if(!x||x.length===0)continue;const a=x[0];if(a.value!=="")if(S){const p=a.id;a&&a.parentElement&&E(a.parentElement);const g=document.createElement("p"),q=`${p}_error_message`;g.classList.add("note","error","mt-5"),g.id=q,g.textContent=e.message,a==null||a.setAttribute("aria-describedby",q),a==null||a.insertAdjacentElement("afterend",g);return}else l===e.error_type&&o++}}else{const o=B[e.error_type],n=document.querySelector(`#${o}`);n&&n.parentElement&&E(n.parentElement);const s=document.createElement("p"),i=`${o}_error_message`;s.classList.add("note","error"),s.id=i,s.textContent=e.message,n==null||n.setAttribute("aria-describedby",i),n==null||n.insertAdjacentElement("afterend",s)}}d(j,"showInputErrorState");function T(t){var e,r;const o=document.querySelector(".js-error-banner");o.hidden=!0;for(const n of t.getElementsByTagName("input"))if((e=n.parentElement)==null?void 0:e.classList.contains("errored")){C(n.parentElement);const s=n.getAttribute("aria-describedby");(r=document.querySelector(`#${s}`))==null||r.remove()}}d(T,"clearInputErrorState");function f(){const t=document.querySelector(".js-post-processing-expression-max-count");if(!t)return 5;const e=t.textContent;return e?parseInt(e):5}d(f,"getMaxPostProcessingExpressions");function E(t){t==null||t.classList.add("form-group","errored","my-0")}d(E,"addErrorStylingToInput");function C(t){t==null||t.classList.remove("form-group","errored","my-0")}d(C,"removeErrorStylingFromInput");function b(){if(!window.codeEditor)return;const t=window.codeEditor.posFromIndex(0),e=window.codeEditor.posFromIndex(window.codeEditor.getValue().length);for(const r of window.codeEditor.findMarks(t,e))r.clear()}d(b,"clearCodeHighlights");const B={NONE:"",CONFIG_LOAD:"secret_format",COMPILE_DB:"secret_format",START_DELIMITER:"before_secret",END_DELIMITER:"after_secret",DISPLAY_NAME:"display_name"};async function k(t,e,r){let o;try{const n=await fetch(t.action,{method:t.method,body:new FormData(t),headers:{Accept:"application/json"}});n.ok&&(o=await n.json())}catch(n){}if(o&&e(o.error))if(o.has_matches){const n=JSON.parse(o.matches);b(),r(n);for(const s of n){const i=window.codeEditor.posFromIndex(s.start),c=window.codeEditor.posFromIndex(s.end);window.codeEditor.markText(i,c,{className:"text-bold hx_keyword-hl rounded-1 d-inline-block"})}}else r([]),b()}d(k,"updatePatternMatches")}}});
//# sourceMappingURL=scanning-d4131312.js.map
